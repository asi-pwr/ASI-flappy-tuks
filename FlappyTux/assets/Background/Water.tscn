[gd_scene load_steps=9 format=2]

[sub_resource type="Shader" id=5]
code = "shader_type canvas_item;

uniform vec4 color_correction : hint_color;
uniform vec4 color_correction_texture2 : hint_color;

uniform float x_scroll_speed;
uniform float y_scroll_speed;

uniform sampler2D texture2;
uniform sampler2D colorGradient;

uniform vec2 UV_offset;

vec2 dynamic_distortion(float uvx, float uvy){
	const float no_dist = 1.0;
	
	uvx *= (sin(TIME)*sin(TIME)*0.15+0.5);
	uvy *= no_dist;
	return vec2(uvx, uvy);
}

float brightness(vec4 Texture){ 
	return (Texture.r + Texture.g + Texture.b) /3.0;
} 

vec4 greyscale(vec4 Texture){
	return vec4 (brightness(Texture), brightness(Texture), brightness(Texture), Texture.a);
}

vec2 scrol(float x, float y, float scale){
	return vec2(y, x)*TIME*scale;
}

void fragment() {
	textureSize(TEXTURE, 2);
	//vec4 pixel_color = texture(TEXTURE, vec2(UV.x*(sin(TIME)*sin(TIME)*0.5+0.5), UV.y));
	//COLOR = color_correction * greyscale(texture(SCREEN_TEXTURE, dynamic_distortion(SCREEN_UV.x, SCREEN_UV.y)));
	vec4 texture_color_1 = (texture(TEXTURE, dynamic_distortion(UV.x + UV_offset.x, UV.y + UV_offset.y) + scrol(y_scroll_speed, x_scroll_speed, 1)));
	vec4 texture_color_2 = texture(texture2, UV + UV_offset + scrol(y_scroll_speed, x_scroll_speed, 0.5));
	//vec4 texture_mix = vec4(texture_color_1.r * texture_color_2.r, texture_color_1.g * texture_color_2.r,texture_color_1.b * texture_color_2.r, 1);
	//COLOR = vec4(texture_color_1.r * texture_color_2.r, texture_color_1.g * texture_color_2.r,texture_color_1.b * texture_color_2.r, 1);
	float energy = brightness(texture_color_1) * brightness(texture_color_2);
	vec4 color = texture(colorGradient, vec2(energy));
	COLOR = color;
	
	
	//COLOR = pixel_color;
}"

[sub_resource type="Gradient" id=8]
offsets = PoolRealArray( 0.0213904, 0.0614973, 0.221925, 1 )
colors = PoolColorArray( 1, 1, 1, 1, 0, 0.0909785, 0.363281, 1, 0, 0.482101, 0.869141, 1, 0.0078125, 0, 1, 1 )

[sub_resource type="GradientTexture" id=9]
gradient = SubResource( 8 )
width = 2052

[sub_resource type="OpenSimplexNoise" id=6]
octaves = 8
period = 66.8
persistence = 0.425
lacunarity = 3.59

[sub_resource type="NoiseTexture" id=7]
seamless = true
noise = SubResource( 6 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 5 )
shader_param/color_correction = Color( 0, 0.694118, 1, 1 )
shader_param/color_correction_texture2 = Color( 0.607843, 0.713726, 0.882353, 1 )
shader_param/x_scroll_speed = 0.0
shader_param/y_scroll_speed = 0.0
shader_param/UV_offset = Vector2( 0, -0.042 )
shader_param/texture2 = SubResource( 7 )
shader_param/colorGradient = SubResource( 9 )

[sub_resource type="OpenSimplexNoise" id=3]
resource_local_to_scene = true
seed = 90
octaves = 8
period = 90.0
persistence = 0.319
lacunarity = 2.44

[sub_resource type="NoiseTexture" id=4]
seamless = true
bump_strength = 88.0
noise = SubResource( 3 )

[node name="water_surface" type="Sprite"]
material = SubResource( 2 )
position = Vector2( 1585.63, 660.178 )
rotation = 1.5708
scale = Vector2( 1.212, 2.03108 )
texture = SubResource( 4 )
offset = Vector2( -290.573, 526.122 )
